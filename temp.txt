composer
composer create-project bcit-ci/codeigniter nome_projeto --prefer-dist
na pasta config/ config.php linha 139 = FCPATH.'vendor/autoload.php';
criar pasta public na raiz da pasta do projeto
copiar o index.php da raiz para a pasta public
chdir(dirname(__DIR__));
php -S localhost:8000 -t public

remover o index.php da url - url amigável
RewriteEngine On
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule ^(.*)$ index.php/$1 [L]

alterar a base_url na pasta config/ config.php linha 26

template view
no controller
$dados["view"] = "v_nome_da_view";
$this->load->view("v_template", $dados);

https://www.devmedia.com.br/codigos/?a=38998

                        $('#sec_ralatorios_index').remove();
                        var obj = retorno[0]['dados'];
                        for (var k in obj) {
                            var item = obj[k];
                            //console.log(item.categoria);
                            alert(item.categoria);
                        }

    for (var key in value) {
        row = value[key];
        div += "<option value='" + row.id_especialidade + "'>" + row.nome + "</option>";
    }


    public function gerarRelatorioAnual($ano)
    {
        if (!empty($ano)) {
            $dataInicial = "{$ano}-01-01";
            $dataFinal = "{$ano}-12-31";
            $values = "$dataInicial AND $dataFinal";
            $resultado = $this->selectWhere("SELECT c.nome_categoria AS categoria, SUM(valor) AS total, mes AS mes " .
                "FROM {$this->extrato_model->getTable()} e JOIN {$this->categoria->getTable()} c ON (c.id_categoria = e.fk_id_categoria) " .
                "WHERE c.id_categoria IN (SELECT fk_id_categoria FROM {$this->categoria->getTable()} " .
                "WHERE data_movimentacao BETWEEN '".$dataInicial."' AND '".$dataFinal."' GROUP BY fk_id_categoria ORDER BY fk_id_categoria ASC) " .
                "AND data_movimentacao BETWEEN ? AND e.tipo_operacao = 'Débito' GROUP BY e.mes , c.id_categoria " .
                "ORDER BY c.nome_categoria , e.data_movimentacao ASC", $values);
            if (!empty($resultado->result_object())) {
                return array('status'=>'success', 'message' => $resultado->result_object());
            } else {
                return false;
            }
        } else {
            return array('status'=>'error', 'message' => 'ERRO: Possui dados vazios.');
        }
    }


        $sql = "SELECT id_item_despesa_fatura AS id_item_desp, despesa, DATE_FORMAT(data_compra,'%d/%m/%Y') 
		AS data_compra, valor_compra, parcela FROM $this->table 
		WHERE data_pagamento = ? AND fk_id_cartao_credito = ? ORDER BY data_compra ASC";
		return $this->db->query($sql, [$data_pagamento, $idFatura])->result_array();


	<script type="text/javascript">
	window.onload = function() {
		var contexto = document.getElementById("grafico").getContext("2d");
		var grafico = new Chart(contexto, {
			type:'line',
			data: {
				labels: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],
				datasets: [{
					label:'Gasolina',
					backgroundColor:'red',
					borderColor:'red',
					data: [
						120.00, 300.00, 400.00, 350.00, 550.00, 480.00, 450.00, 800.00, 500.00, 350.00, 650.00, 470.00
					],
					fill:false
				}, {
					label:'Bebidas',
					backgroundColor:'green',
					borderColor:'green',
					data: [
						80.50, 150.00, 350.00, 500.00, 220.00, 700.00, 350.00, 240.00, 80.00, 300.00, 450.00, 350.00
					],
					fill:false
				}],
			},
			options: {
				responsive: true
			}
		});
	}
	</script>
    


 $("#div_especialidades").append(createDivEspecialidades(retorno.especialidades));

na view
<?php $this->load->view($view); ?>

<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <title>Conta</title>
    <link rel="stylesheet" href="/assets/css/template.css" />

    <link rel="stylesheet" href="/assets/fonts/glyphicons-halflings-regular.ttf" media="all" />
    <meta name="viewport" content="width=device-width, initial-scale=1">
</head>


    <script src="/assets/js/jquery-3.1.0.min.js"></script>
    <script src="/assets/js/jquery.maskMoney.js"></script>
    <script src="/assets/js/scripts.js"></script>
    <script src="/assets/js/jquery.maskedinput.js"></script>



    $this->load->library('form_validation');

    $this->form_validation->set_rules('email', 'Email', 'required');
    $this->form_validation->set_rules('password', 'Senha', 'required');

    if ($this->form_validation->run() === FALSE) {
        $dados["title"] = "Login";
        $dados["view"] = "auth/v_login";
        $this->load->view("v_template", $dados);
    } else {
        $user = $this->users_model->getByEmailAndPassword();
        if ($user) {
            $this->session->set_userdata(['user'=>$user]);
            redirect('pages', 'location', 302);
            die();
        }
        echo 'Usuário ou senha não encontrado';
    }



http://www.bsourcecode.com/codeigniter/codeigniter-insert-query/
https://stackoverflow.com/questions/16647112/codeigniter-insert-query-is-correct-and-executed-but-no-insert-is-performed
https://www.codeigniter.com/userguide3/database/query_builder.html
https://stackoverflow.com/questions/15969411/insert-data-into-database-with-codeigniter





    public function createConta(array $dados)
    {
        try {
            $sql = "INSERT INTO $this->table (codigo_agencia, digito_verificador_agencia, numero_conta, digito_verificador_conta,
              codigo_operacao, data_cadastro, fk_id_usuario, fk_cod_banco, fk_tipo_conta) VALUES (?,?,?,?,?,?,?,?,?)";
              $this->db->query($sql, [$dados['codigo_agencia'],
              !empty($dados['digito_verificador_agencia']) ? $dados['digito_verificador_agencia'] : null, $dados['numero_conta'],
              $dados['digito_verificador_conta'], !empty($dados['codigo_operacao']) ? $dados['codigo_operacao'] : null, $dados['data_cadastro'],
              $dados['fk_id_usuario'], $dados['fk_cod_banco'], $dados['fk_tipo_conta']]);
            return array('status'=>'success', 'message' => 'Conta Cadastrada com Sucesso!');
        } catch (Exception $e) {
            return array('status'=>'error', 'message' => $e->getMessage());
        }
    }



